name: Lint & Test
on:
    push:
        branches:
            - "**"
jobs:
    lint:
        name: Lint
        runs-on: ubuntu-latest
        steps:
            - name: Set up go (TODO - lint frontend)
              uses: actions/setup-go@v1
              with:
                  go-version: 1.14.x

            - name: Check out code
              uses: actions/checkout@v1

            - name: Lint go code
              run: |
                  export PATH=$PATH:$(go env GOPATH)/bin # temp fix, https://github.com/actions/setup-go/issues/14
                  curl -sfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.41.1
                  make lint
    test:
        name: Test
        runs-on: ubuntu-latest
        steps:
            - name: Set up go (TODO - test frontend)
              uses: actions/setup-go@v1
              with:
                  go-version: 1.14.x

            - name: Check out code
              uses: actions/checkout@v1

            - name: Run tests
              run: make test-cov

            - name: Upload coverage report to CodeCov
              uses: codecov/codecov-action@v1.0.0
              with:
                  token: ${{secrets.CODECOV_TOKEN}}
                  file: ./coverage.txt
    deploy:
        name: Deploy
        needs: [lint, test]
        runs-on: ubuntu-latest
        steps:
            - name: Set up go
              uses: actions/setup-go@v1
              with:
                  go-version: 1.14.x

            - name: Set up node
              uses: actions/setup-node@v2
              with:
                node-version: '16'

            - name: Check out code
              uses: actions/checkout@v2

            - name: Build
              run: |
                  mkdir --parents $(go env GOPATH)/bin/
                  export PATH=$PATH:$(go env GOPATH)/bin # temp fix, https://github.com/actions/setup-go/issues/14
                  # install protoc
                  export PROTOC_VERSION=3.9.2
                  export PROTOC_ZIP=protoc-${PROTOC_VERSION}-linux-x86_64.zip
                  curl -fLO "https://github.com/protocolbuffers/protobuf/releases/download/v${PROTOC_VERSION}/${PROTOC_ZIP}"
                  unzip ${PROTOC_ZIP}
                  mv bin/protoc $(go env GOPATH)/bin/
                  mv include/* ./
                  export DOCKER_USERNAME=$GITHUB_ACTOR
                  export DOCKER_PASSWORD=${{secrets.GITHUB_TOKEN}}
                  make deploy
